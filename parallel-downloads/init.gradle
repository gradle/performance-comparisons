def mirror = new File(gradle.startParameter.projectProperties['mirrorPath']?:'repository')

if (!mirror.exists() || mirror.list().length==0 ) {
   println "Mirror not found, using Maven Central"
   gradle.allprojects {
       it.setProperty('mavenRepoURL', 'https://repo1.maven.org/maven2')
   }

   gradle.buildFinished {
         // mirror Gradle cache as a Maven repository
         def cache = rootProject.file("${gradle.gradleUserHomeDir}/caches/modules-2/files-2.1")
         cache.eachFileRecurse { f ->
            if (f.name.endsWith('.pom')) {
                def parts = f.absolutePath.split(/\\|\//)
                def (group, artifact, version) = [parts[-5], parts[-4], parts[-3]]
                def targetDir = rootProject.file("${mirror.absolutePath}/${group.replace('.', File.separator)}/$artifact/$version")
                println "Mirroring $group:$artifact:$version into $targetDir.absolutePath"
                targetDir.mkdirs()
                new File(targetDir, f.name).bytes = f.bytes
                def jarName = (f.name - '.pom') + '.jar'
                def lookup = f.parentFile.parentFile
                lookup.eachFileRecurse { maybeJar ->
                  if (maybeJar.name == jarName) {
                     new File(targetDir, jarName).bytes = maybeJar.bytes
                  }
                }
            }
         }
      }
}


